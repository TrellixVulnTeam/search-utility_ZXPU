{"ast":null,"code":"var _jsxFileName = \"/Users/ey8ygwc/Desktop/search-utility/client/src/components/TweetBox/Tweet/Tweet.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport './Tweet.scss';\nimport { TweetStreamContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tweet = () => {\n  _s();\n\n  const {\n    tweets\n  } = useContext(TweetStreamContext);\n  const [tweetData, setTweetData] = tweets;\n  const checkmark = '\\u2714';\n  const tweetInnerBody = tweetData.map((tweetItem, indx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet--item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tweet--tweet\",\n        children: tweetItem.tweet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tweet--user\",\n        children: [tweetItem.user, \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tweetItem.verified === true ? checkmark : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tweet--retweet\",\n        children: [\"Retweeted: \", tweetItem.retweet_count, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, indx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweetInnerBody ? tweetInnerBody : 'No Tweets to display!'\n  }, void 0, false);\n};\n\n_s(Tweet, \"4SZ3gB7zDQ6jyJJYBJbLVBMcD1I=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/ey8ygwc/Desktop/search-utility/client/src/components/TweetBox/Tweet/Tweet.tsx"],"names":["React","useContext","TweetStreamContext","Tweet","tweets","tweetData","setTweetData","checkmark","tweetInnerBody","map","tweetItem","indx","tweet","user","verified","retweet_count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAuD,OAAvD;AACA,OAAO,cAAP;AACA,SAASC,kBAAT,QAAmC,cAAnC;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,UAAU,CAACC,kBAAD,CAA7B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BF,MAAlC;AACA,QAAMG,SAAS,GAAG,QAAlB;AAEA,QAAMC,cAAc,GAAGH,SAAS,CAACI,GAAV,CAAc,CAACC,SAAD,EAAiBC,IAAjB,KAAkC;AACrE,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGD,SAAS,CAACE;AADb;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACGF,SAAS,CAACG,IADb,4BAC+B;AAAA,oBAAOH,SAAS,CAACI,QAAV,KAAuB,IAAvB,GAA8BP,SAA9B,GAA0C;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kCACcG,SAAS,CAACK,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAAkCJ,IAAlC;AAAA;AAAA;AAAA;AAAA,YADJ;AAaD,GAdsB,CAAvB;AAgBA,sBACE;AAAA,cACGH,cAAc,GAAGA,cAAH,GAAoB;AADrC,mBADF;AAKD,CA3BD;;GAAML,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './Tweet.scss';\nimport { TweetStreamContext } from '../../../App';\n\n\nconst Tweet = () => {\n\n  const { tweets } = useContext(TweetStreamContext);\n  const [tweetData, setTweetData] = tweets;\n  const checkmark = '\\u2714';  \n  \n  const tweetInnerBody = tweetData.map((tweetItem: any, indx: number) => {\n    return (\n        <div className='tweet--item' key={indx} >\n          <div className=\"Tweet--tweet\">\n            {tweetItem.tweet}\n          </div>\n          <div className=\"Tweet--user\">\n            {tweetItem.user} &nbsp;&nbsp;<span>{tweetItem.verified === true ? checkmark : '' }</span>\n          </div>\n          <div className=\"Tweet--retweet\">\n            Retweeted: {tweetItem.retweet_count} times\n          </div>\n        </div>\n    )\n  })\n\n  return (\n    <>\n      {tweetInnerBody ? tweetInnerBody : 'No Tweets to display!'}\n    </>\n  )\n}\n\nexport default Tweet\n"]},"metadata":{},"sourceType":"module"}