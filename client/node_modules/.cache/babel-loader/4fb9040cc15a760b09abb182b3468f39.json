{"ast":null,"code":"var _jsxFileName = \"/Users/ey8ygwc/Desktop/search-utility/client/src/components/SearchPanel/SearchPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './SearchPanel.scss';\nimport { CONDIITION_OPTIONS_ENUM, TERM_WORD_TEXT } from '../../variables/variables';\nimport { TweetStreamContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPanel = () => {\n  _s();\n\n  const [term, setTerm] = useState('');\n  const [equals, setEquals] = useState('');\n  const [contains, setContains] = useState('');\n  const [reg, setReg] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(2);\n  const [fields, setFields] = useState([{\n    value: '',\n    add: null,\n    type: ''\n  }]);\n  const {\n    criteria\n  } = useContext(TweetStreamContext);\n  const [criteriaData, setCriteriaData] = criteria;\n\n  const addCondition = () => {\n    // set the current index in order to switch add/delete button\n    setFields([...fields, {\n      value: '',\n      add: false,\n      type: 'equals'\n    }]);\n  }; // remove a condition text box\n\n\n  const removeCondition = idx => {\n    if (fields.length > 1) {\n      const values = [...fields];\n      values.splice(idx, 1);\n      setFields(values);\n    }\n  }; // detect when text is entered into the input element\n\n\n  const detectInputChange = (i, event) => {\n    const values = [...fields];\n    values[i].value = event.target.value; // if no ttext is in the unput element or backspace happens\n    // emit an event to reacts reducer\n\n    if (values[i].value.length === 0) {\n      setCriteriaData([]);\n    } // if no criteria is set, assume criteria is equals\n\n\n    if (values[i].type === '') {\n      values[i].type = 'equals';\n    }\n\n    setFields(values);\n  }; // detect the select dropdown input change\n\n\n  const detectSelectChange = (i, event) => {\n    const values = [...fields];\n    values[i].type = event.target.value;\n    setFields(values);\n  }; // send search criteria via reducer back up to parent\n\n\n  const sendQueryToFilter = event => {\n    event.preventDefault(); // alert('A term was entered: ' + JSON.stringify(fields));\n\n    alert('Time to search some tweets! Let\\'s go!');\n    setCriteriaData(fields);\n  }; // set the select dropdown options\n\n\n  const setConditions = Object.values(CONDIITION_OPTIONS_ENUM).map((condition, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: condition\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendQueryToFilter,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [TERM_WORD_TEXT, fields.map((field, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"SearchOptions-toggle\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"SearchSelect-option\",\n                onChange: e => detectSelectChange(idx, e),\n                children: setConditions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: field.value,\n              placeholder: \"Enter search text\",\n              onChange: e => detectInputChange(idx, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"RemoveCondition-button\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"Ex--sign\",\n                onClick: () => removeCondition(idx),\n                children: \" x \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, `${field}-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"Query-button\",\n          children: \"Run Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"AddCondition-button\",\n          onClick: () => addCondition(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPanel, \"ScpYrwG6R178uh3gDKdIErICq/I=\");\n\n_c = SearchPanel;\nexport default SearchPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPanel\");","map":{"version":3,"sources":["/Users/ey8ygwc/Desktop/search-utility/client/src/components/SearchPanel/SearchPanel.tsx"],"names":["React","useContext","useState","CONDIITION_OPTIONS_ENUM","TERM_WORD_TEXT","TweetStreamContext","SearchPanel","term","setTerm","equals","setEquals","contains","setContains","reg","setReg","currentIndex","setCurrentIndex","fields","setFields","value","add","type","criteria","criteriaData","setCriteriaData","addCondition","removeCondition","idx","length","values","splice","detectInputChange","i","event","target","detectSelectChange","sendQueryToFilter","preventDefault","alert","setConditions","Object","map","condition","index","field","e"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport TweetBox from '../TweetBox/TweetBox';\nimport './SearchPanel.scss';\nimport { CONDIITION_OPTIONS_ENUM, TERM_WORD_TEXT } from '../../variables/variables'\nimport { TweetStreamContext } from '../../App';\n\nconst SearchPanel = () => {\n  const [term, setTerm] = useState('');\n  const [equals, setEquals] = useState('');\n  const [contains, setContains] = useState('');\n  const [reg, setReg] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(2);\n  const [fields, setFields] = useState([{ value: '', add: null, type: '' }]);\n  const { criteria } = useContext(TweetStreamContext);\n  const [ criteriaData , setCriteriaData] = criteria;\n\n\n  const addCondition = () => {\n    // set the current index in order to switch add/delete button\n    setFields([\n          ...fields,\n          {\n            value: '',\n            add: false,\n            type: 'equals'\n          }\n        ]);\n  }\n\n  // remove a condition text box\n  const removeCondition = (idx: any) => {\n    if(fields.length > 1) {\n      const values = [...fields];\n      values.splice(idx, 1);\n      setFields(values);\n    }\n  }\n\n  // detect when text is entered into the input element\n  const detectInputChange = (i: number, event: any) => {\n    const values = [...fields];\n    values[i].value = event.target.value;\n\n    // if no ttext is in the unput element or backspace happens\n    // emit an event to reacts reducer\n    if(values[i].value.length === 0) {\n      setCriteriaData([])\n    }\n\n    // if no criteria is set, assume criteria is equals\n    if(values[i].type === '') {\n      values[i].type = 'equals';\n    }\n    setFields(values);\n  }\n\n  // detect the select dropdown input change\n  const detectSelectChange = (i: number, event: any) => {\n    const values = [...fields];\n    values[i].type = event.target.value;\n    setFields(values);\n  }\n\n  // send search criteria via reducer back up to parent\n  const sendQueryToFilter = (event: any) => {\n    event.preventDefault();\n    // alert('A term was entered: ' + JSON.stringify(fields));\n    alert('Time to search some tweets! Let\\'s go!');\n    setCriteriaData(fields);\n  }\n\n  // set the select dropdown options\n  const setConditions = Object.values(CONDIITION_OPTIONS_ENUM).map((condition, index) => {\n    return <option key={index}>{condition}</option>\n  });\n\n  return (\n    <div>\n      <form onSubmit={sendQueryToFilter}>\n        <label>{ TERM_WORD_TEXT }\n        {fields.map((field, idx) => {\n          return (\n            <div key={`${field}-${idx}`}>\n              <div className='SearchOptions-toggle'>\n                <select className='SearchSelect-option' onChange={e => detectSelectChange(idx, e)} >\n                  { setConditions }\n                </select>\n              </div>\n              <input type='text' value={ field.value }  placeholder=\"Enter search text\"\n              onChange={e => detectInputChange(idx, e)} />\n              <div className='RemoveCondition-button'>\n                  <span className=\"Ex--sign\" onClick={() => removeCondition(idx)} > x </span> \n              </div>\n            </div>\n          )\n          })}\n        </label>\n        <hr />\n        <div id=\"container\">\n          <button type='submit' id='Query-button' >Run Query</button>\n          <button type=\"button\" className='AddCondition-button' onClick={() => addCondition()}>\n          +\n          </button>\n        </div>\n      </form>  \n    </div>\n  )\n}\n\nexport default SearchPanel\n"]},"metadata":{},"sourceType":"module"}